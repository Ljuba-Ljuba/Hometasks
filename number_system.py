'''
Задача №2.
Реализуйте модуль number_system для перевода числа из одной системы счисления в другую.
Модуль должен содержать 6 функций для перевода из десятичной системы счисления в двоичную, восьмеричную, шестнадцатиричную и наоборот:
- dec2bin(number) - возвращает str
- dec2oct(number) - возвращает str
- dec2hex(number) - возвращает str
- bin2dec(number) - возвращает int
- oct2dec(number) - возвращает int
- hex2dec(number) - возвращает int

В решении не должно присутствовать операций ввода-вывода.
Ситуации, когда в исходном числе есть не допустимые цифры (буквы), игнорируются.

Имя файла: number_system.py
Тестовый набор данных №1:
Входные данные: 250
Выходные данные для функций dec*: "11111010" "372" "FA"
Тестовый набор данных №2:
Входные данные: "1010011010"
Выходные данные: 666
Тестовый набор данных №3:
Входные данные: "755"
Выходные данные: 493
Тестовый набор данных №4:
Входные данные: "ABCDEF"
Выходные данные: 11259375
'''


def dec2bin(number): # функция перевоа из 10-й в двоичную. на входе число
    return trasl_from_dec(number,2) #вызов функции, где производится
                                    # универсальный перевод


def dec2oct(number): # функция перевоа из 10-й в 8-миричную. на входе число
    return trasl_from_dec(number,8)


def dec2hex(number): # функция перевоа из 10-й в 16-ричну. на входе число
    return trasl_from_dec(number,16)


def hex2dec(number): # функция перевода из 16ричной в 10тичную.. на входе строка
    return trasl_to_dec(number,16) #вызов функции, где производится
                                    # универсальный перевод


def oct2dec(number):# функция перевода из 8ричной в 10тичную.. на входе строка
    return trasl_to_dec(number,8)


def bin2dec(number):# функция перевода из двоичной в 10тичную.. на входе строка
    return trasl_to_dec(number,2)



def trasl_from_dec(number,bas):#функция для перевода из 10тичной системы
                             #на входе число для перевода и разряд системы
    dict = {
        "0": 0,
        "1": 1,
        "2": 2,
        "3": 3,
        "4": 4,
        "5": 5,
        "6": 6,
        "7": 7,
        "8": 8,
        "9": 9,
        "10": 'A',
        "11": 'B',
        "12": 'C',
        "13": 'D',
        "14": 'E',
        "15": 'F'
    }
    i = 1
    res = []

    while i:
        res.append(str(dict.get(str(number % bas)))) #формируем новый список из
        number = number // bas                      #преобразованных результатов
        i += 1                                 #деления числа на разряд
        if number < bas:
            break
    res.append(str(dict.get(str(number))))

    res=res[::-1] # переворачиваем список
    res='"'+"".join(res)+'"' #формируем строчный результат
    return res #возвращаем


def trasl_to_dec(number,bas): #функция для перевода в 10тичную систему
                             #на входе список для перевода и разряд системы
    dict={
        "0": 0,
        "1": 1,
        "2": 2,
        "3": 3,
        "4": 4,
        "5": 5,
        "6": 6,
        "7": 7,
        "8": 8,
        "9": 9,
        "A": 10,
        "B": 11,
        "C": 12,
        "D": 13,
        "E": 14,
        "F": 15
        }
    number = number[0::1] #отрезаем кавычки

    number_trans=[] #новый список
    for i in number:
        number_trans.append(dict.get(i))#заполняем список элементами, сверяя
                                         #ключи в словаре
    number_trans=number_trans[::-1]# переворачиваем

    bas=int(bas)
    res=0
    for y in range(len(number_trans)):# циклом суммируем многочлен

        res+=int(number_trans[y])*(bas**(y))#
        y+=1

    return res
